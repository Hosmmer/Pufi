{"version":3,"sources":["constants/layout.js","redux/layout/constants.js","redux/layout/actions.js","layouts/Vertical.js","routes/index.js","routes/Routes.js","App.js","redux/layout/reducers.js","redux/reducers.js","redux/layout/saga.js","redux/sagas.js","redux/store.js","index.js"],"names":["LAYOUT_VERTICAL","LAYOUT_DETACHED","LEFT_SIDEBAR_TYPE_CONDENSED","LayoutActionTypes","changeSidebarType","sidebarType","type","payload","Topbar","React","lazy","Footer","loading","className","VerticalLayout","children","dispatch","useDispatch","useState","isMenuOpened","setIsMenuOpened","updateDimensions","useCallback","window","innerWidth","layoutConstants","useEffect","addEventListener","removeEventListener","fallback","openLeftMenuCallBack","prevState","document","body","classList","remove","add","hideLogo","Container","fluid","Pufi","rootRoute","path","exact","component","to","route","Route","dashboardRoutes","name","icon","header","authProtectedFlattenRoutes","flattenRoutes","routes","flatRoutes","forEach","item","push","Routes","props","layout","useSelector","state","Layout","layoutCls","layoutType","DetachedLayout","getLayout","map","r","index","App","INIT_STATE","layoutWidth","showRightSidebar","action","combineReducers","changeLayout","watchChangeLayoutType","LayoutSaga","changeBodyAttribute","attribute","value","setAttribute","call","put","changeSidebarTypeAction","takeEvery","all","fork","rootSaga","layoutSaga","sagaMiddleware","createSagaMiddleware","middlewares","ReactDOM","render","store","initialState","createStore","reducers","applyMiddleware","run","configureStore","getElementById"],"mappings":"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","file":"static/js/main.363bff7a.chunk.js","sourcesContent":["/* Layout types and other constants */\r\n\r\nexport const LAYOUT_VERTICAL = 'vertical';\r\nexport const LAYOUT_HORIZONTAL = 'topnav';\r\nexport const LAYOUT_DETACHED = 'detached';\r\n\r\nexport const LAYOUT_WIDTH_FLUID = 'fluid';\r\nexport const LAYOUT_WIDTH_BOXED = 'boxed'; \r\n\r\nexport const LEFT_SIDEBAR_THEME_DEFAULT = 'default';\r\nexport const LEFT_SIDEBAR_THEME_LIGHT = 'light';\r\nexport const LEFT_SIDEBAR_THEME_DARK = 'dark';\r\n\r\nexport const LEFT_SIDEBAR_TYPE_FIXED = 'fixed';\r\nexport const LEFT_SIDEBAR_TYPE_CONDENSED = 'condensed';\r\nexport const LEFT_SIDEBAR_TYPE_SCROLLABLE = 'scrollable';\r\n","export const LayoutActionTypes = {\r\n    CHANGE_LAYOUT: '@@layout/CHANGE_LAYOUT',\r\n    CHANGE_SIDEBAR_TYPE: '@@layout/CHANGE_SIDEBAR_TYPE',\r\n};\r\n","// @flow\r\nimport { LayoutActionTypes } from './constants';\r\n\r\ntype LayoutAction = { type: string, payload?: string | null };\r\n\r\nexport const changeLayout = (layout: string): LayoutAction => ({\r\n    type: LayoutActionTypes.CHANGE_LAYOUT,\r\n    payload: layout,\r\n});\r\n\r\n\r\nexport const changeSidebarType = (sidebarType: string): LayoutAction => ({\r\n    type: LayoutActionTypes.CHANGE_SIDEBAR_TYPE,\r\n    payload: sidebarType,\r\n});\r\n\r\n\r\n\r\n","// @flow\r\nimport React, { Suspense, useCallback, useEffect, useState } from 'react';\r\nimport {  useDispatch } from 'react-redux';\r\nimport { Container } from 'react-bootstrap';\r\n\r\n// actions\r\nimport { changeSidebarType } from '../redux/actions';\r\n\r\nimport * as layoutConstants from '../constants/layout';\r\n\r\n\r\n// code splitting and lazy loading\r\n// https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\r\nconst Topbar = React.lazy(() => import('./Topbar'));\r\n\r\nconst Footer = React.lazy(() => import('./Footer'));\r\n\r\nconst loading = () => <div className=\"\"></div>;\r\n\r\n\r\n\r\nconst VerticalLayout = ({ children }): React$Element<any> => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [isMenuOpened, setIsMenuOpened] = useState(false);\r\n\r\n    /**\r\n     * Open the menu when having mobile screen\r\n     */\r\n    const openMenu = () => {\r\n        setIsMenuOpened((prevState) => {\r\n            setIsMenuOpened(!prevState);\r\n        });\r\n\r\n        if (document.body) {\r\n            if (isMenuOpened) {\r\n                document.body.classList.remove('sidebar-enable');\r\n            } else {\r\n                document.body.classList.add('sidebar-enable');\r\n            }\r\n        }\r\n    };\r\n\r\n    const updateDimensions = useCallback(() => {\r\n        // activate the condensed sidebar if smaller devices like ipad or tablet\r\n        if (window.innerWidth <= 920) {\r\n            dispatch(changeSidebarType(layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED));\r\n        } else if (window.innerWidth > 920) {\r\n            dispatch(changeSidebarType(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        // activate the condensed sidebar if smaller devices like ipad or tablet\r\n        if (window.innerWidth <= 920) {\r\n            dispatch(changeSidebarType(layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED));\r\n        }\r\n\r\n        window.addEventListener('resize', updateDimensions);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', updateDimensions);\r\n        };\r\n    }, [dispatch, updateDimensions]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"wrapper\">\r\n                <div className=\"content-page\">\r\n                    <div className=\"content\">\r\n                        <Suspense fallback={loading()}>\r\n                            <Topbar openLeftMenuCallBack={openMenu} hideLogo={true} />\r\n                        </Suspense>\r\n                        <Container fluid>\r\n                            <Suspense fallback={loading()}>{children}</Suspense>\r\n                        </Container>\r\n                    </div>\r\n\r\n                    <Suspense fallback={loading()}>\r\n                        <br/>\r\n                        <br/>\r\n                        <Footer />\r\n                    </Suspense>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nexport default VerticalLayout;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Route } from 'react-router-dom';\r\n// lazy load all the views\r\n\r\n// root routes\r\nconst Pufi = React.lazy(() => import('../pufi'));\r\nconst rootRoute = {\r\n    path: '/',\r\n    exact: true,\r\n    component: () => <Redirect to=\"/Pufi\" />,\r\n    route: Route,\r\n};\r\n\r\n// dashboards\r\nconst dashboardRoutes = {\r\n    path: '/Pufi/',\r\n    name: 'Pufi',\r\n    icon: 'uil-home-alt',\r\n    header: 'Navigation',\r\n    children: [\r\n        {\r\n            path: '/Pufi',\r\n            name: 'Pufi',\r\n            component: Pufi,\r\n            route: Route,\r\n        }\r\n    ],\r\n};\r\n\r\n// flatten the list of all nested routes\r\nconst flattenRoutes = (routes) => {\r\n    let flatRoutes = [];\r\n\r\n    routes = routes || [];\r\n    routes.forEach((item) => {\r\n        flatRoutes.push(item);\r\n\r\n        if (typeof item.children !== 'undefined') {\r\n            flatRoutes = [...flatRoutes, ...flattenRoutes(item.children)];\r\n        }\r\n    });\r\n    return flatRoutes;\r\n};\r\n\r\n// All routes\r\n\r\nconst authProtectedRoutes = [rootRoute, dashboardRoutes];\r\nconst authProtectedFlattenRoutes = flattenRoutes([...authProtectedRoutes]);\r\n\r\nexport { authProtectedRoutes, authProtectedFlattenRoutes };\r\n","import { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport * as layoutConstants from '../constants/layout';\r\n\r\n// All layouts/containers\r\n\r\nimport VerticalLayout from '../layouts/Vertical';\r\nimport DetachedLayout from '../layouts/Detached';\r\n\r\nimport { authProtectedFlattenRoutes } from './index';\r\n\r\nconst Routes = (props) => {\r\n    const { layout } = useSelector((state) => ({\r\n        layout: state.Layout,\r\n    }));\r\n\r\n    const getLayout = () => {\r\n        let layoutCls = VerticalLayout;\r\n\r\n        switch (layout.layoutType) {\r\n            case layoutConstants.LAYOUT_VERTICAL:\r\n                layoutCls = VerticalLayout;\r\n                break;\r\n            case layoutConstants.LAYOUT_DETACHED:\r\n                layoutCls = DetachedLayout;\r\n                break;\r\n            default:\r\n                //layoutCls = HorizontalLayout;\r\n                break;\r\n        }\r\n        return layoutCls;\r\n    };\r\n\r\n    let Layout = getLayout();\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path={authProtectedFlattenRoutes.map((r) => r['path'])}>\r\n                    <Layout {...props} layout={layout}>\r\n                        <Switch>\r\n                            {authProtectedFlattenRoutes.map((route, index) => {\r\n                                return (\r\n                                    !route.children && (\r\n                                        <route.route\r\n                                            key={index}\r\n                                            path={route.path}\r\n                                            exact={route.exact}\r\n                                            component={route.component}\r\n                                        />\r\n                                    )\r\n                                );\r\n                            })}\r\n                        </Switch>\r\n                    </Layout>\r\n                </Route>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default Routes;\r\n","// @flow\r\nimport React from 'react';\r\nimport Routes from './routes/Routes';\r\n\r\n// Themes\r\n\r\n// For Saas import Saas.scss\r\nimport './assets/scss/Saas.scss';\r\n\r\ntype AppProps = {};\r\n\r\n/**\r\n * Main app component\r\n */\r\n\r\nconst App = (props: AppProps): React$Element<any> => {\r\n    return <Routes></Routes>;\r\n};\r\n\r\nexport default App;\r\n","// @flow\r\nimport { LayoutActionTypes } from './constants';\r\n\r\nimport * as layoutConstants from '../../constants/layout';\r\n\r\nconst INIT_STATE = {\r\n    layoutType: layoutConstants.LAYOUT_VERTICAL,\r\n    layoutWidth: layoutConstants.LAYOUT_WIDTH_FLUID,\r\n    showRightSidebar: false,\r\n};\r\n\r\ntype LayoutAction = { type: string, payload?: string | null };\r\n\r\n\r\nconst Layout = (state: State = INIT_STATE, action: LayoutAction): any => {\r\n    switch (action.type) {\r\n        case LayoutActionTypes.CHANGE_LAYOUT:\r\n            return {\r\n                ...state,\r\n                layoutType: action.payload,\r\n            };\r\n\r\n        case LayoutActionTypes.CHANGE_SIDEBAR_TYPE:\r\n            return {\r\n                ...state,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default Layout;\r\n","// @flow\r\nimport { combineReducers } from 'redux';\r\nimport Layout from './layout/reducers';\r\nexport default (combineReducers({\r\n    Layout,\r\n}): any);\r\n","// @flow\r\nimport { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport { LayoutActionTypes } from './constants';\r\nimport * as layoutConstants from '../../constants';\r\nimport { changeSidebarType as changeSidebarTypeAction } from './actions';\r\n\r\n/**\r\n * Changes the body attribute\r\n */\r\nfunction changeBodyAttribute(attribute, value) {\r\n    if (document.body) document.body.setAttribute(attribute, value);\r\n    return true;\r\n}\r\n\r\n/**\r\n * Changes the layout type\r\n * @param {*} param0\r\n */\r\nfunction* changeLayout({ payload: layout }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout', layout);\r\n        if (layout === layoutConstants.LAYOUT_DETACHED) {\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE));\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchChangeLayoutType(): any {\r\n    yield takeEvery(LayoutActionTypes.CHANGE_LAYOUT, changeLayout);\r\n}\r\n\r\nfunction* LayoutSaga(): any {\r\n    yield all([\r\n        fork(watchChangeLayoutType)\r\n    ]);\r\n}\r\n\r\nexport default LayoutSaga;\r\n","// @flow\r\nimport { all } from 'redux-saga/effects';\r\n\r\nimport layoutSaga from './layout/saga';\r\n\r\nexport default function* rootSaga(): any {\r\n    yield all([layoutSaga()]);\r\n}\r\n","// @flow\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport reducers from './reducers';\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middlewares = [sagaMiddleware];\r\n\r\nexport function configureStore(initialState: {}): any {\r\n    let store;\r\n\r\n    if (window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__']) {\r\n        store = createStore(reducers, initialState, window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'](applyMiddleware(...middlewares)));\r\n    } else {\r\n        store = createStore(reducers, initialState, applyMiddleware(...middlewares));\r\n    }\r\n    sagaMiddleware.run(rootSaga);\r\n    return store;\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from './redux/store';\r\n\r\nReactDOM.render(\r\n    <Provider store={configureStore({})}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}